% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HolfordMeetsMonty.R
\name{change_door}
\alias{change_door}
\title{Stay or Switch?}
\usage{
change_door(stay = T, opened.door, a.pick)
}
\arguments{
\item{This}{function introduces the argument stay, and requires the arguments opened.door, and
a.pick. The stay argument tells the function whether or not to switch the selection.
The opened.door and a.pick arguments help the function determine the final pick.}
}
\value{
This function returns a single integer representing the final door pick. If stay = T,
the function will return the integer indicated by a.pick. If stay = F, the function will
return the only remaining positional integer after taking away the options of
a.pick and opened.door
}
\description{
\code{change_door()} ultimately delivers the final selection for the contestant as
a single integer. The final selection is dependent upon the argument stay = T, which
will default to staying with the door the contestant initially picked. If stay = F, then
the function will change the selection to the only remaining door (less the initial pick
and opened goat door.)
}
\details{
Since the car is in position 2, and the contestant picked door 2, \code{open_goat_door()}
should return either 1 or 3.

Now that one possibility has been removed, the contestant is given the opportunity
to stay with their original choice or switch to the final remaining door. This is
where the crux of the problem lies. Do your increase your chances of winning by
switching or are you best to stay with your initial choice? By running a number
of simulations we can track the win percentage when the stay strategy is used and
when the switch strategy is used to answer that question.
}
\examples{
change_door(stay = T, opened.door, a.pick)
change_door(stay = F, opened.door, a.pick)
change_door(stay = T, opened.door = 1, a.pick = 2)

}
